@startuml
skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0
left to right direction

class NotEnoughSpecialsCardsError {
  +NotEnoughSpecialsCardsError(message: String)
}
class NotEnoughUnitsCardsError {
  +NotEnoughUnitsCardsError(message: String)
}
class NotEnoughCardsInDeckError {
  +NotEnoughCardsInDeckError(message: String)
}
class InvalidCardAmountError {
  +InvalidCardAmountError(message: String)
}
class TheCardWasNotFound {
  +TheCardWasNotFound(message: String)
}
class SectionTypeMismatchError {
  +SectionTypeMismatchError(message: String)
}

class Deck {
  +Deck(cards: List<Card>)
  +retrieveNRandomCards(n: int): List<Card>
}
class Hand {
  +getNCardsFromDeck(deck: Deck, n: int): void
}
class CardCollection {
  +retrieveCard(card: Card): Card
}
class Validate6SpecialCards {
  -MIN_SPECIALS: int
  +validate(cards: List<Card>): void
}
class Validate15UnitsCards {
  -MIN_UNITS: int
  +validate(cards: List<Card>): void
}
class Card {
  +play(section: Section): void
  +verifySectionType(sectionType: SectionType): void
}

Validate6SpecialCards ..> NotEnoughSpecialsCardsError : throws
Validate15UnitsCards ..> NotEnoughUnitsCardsError : throws
Deck ..> InvalidCardAmountError : throws
Deck ..> NotEnoughCardsInDeckError : throws
Deck ..> NotEnoughSpecialsCardsError : throws
Deck ..> NotEnoughUnitsCardsError : throws
Hand ..> InvalidCardAmountError : throws
CardCollection ..> TheCardWasNotFound : throws
Card ..> SectionTypeMismatchError : throws

InvalidCardAmountError --|> RuntimeException
NotEnoughSpecialsCardsError --|> RuntimeException
NotEnoughCardsInDeckError --|> RuntimeException
NotEnoughUnitsCardsError --|> RuntimeException
TheCardWasNotFound --|> RuntimeException
SectionTypeMismatchError --|> RuntimeException
@enduml
