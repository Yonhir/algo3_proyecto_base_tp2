@startuml

skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0

' =====================
' CARD HIERARCHY
' =====================

abstract class Card <<abstract>> {
  -name: String
  -description: String
  +Card(name: String, description: String): Card
  +play(target : CardTarget): void
  +canBePlaced(target : CardTarget): boolean
}

class Unit {
  -basePoints: int
  -currentPoints: int
  -modifiers: List<Modifier>
  -canBeInCloseCombat: boolean
  -canBeInRanged: boolean
  -canBeInSiege: boolean
  +Unit(name: String, description: String, points: int, closeCombat: boolean, ranged: boolean, siege: boolean, modifiers: List<Modifier>): Unit
  +calculatePoints(): int
  +play(target : CardTarget): void
  +resetPoints(): void
  +setPoints(points: int): void
  +haveModifier(modifier: Modifier): boolean
  +canBePlaced(target : CardTarget): boolean
  +canBeInCloseCombat(): boolean
  +canBeInRanged(): boolean
  +canBeInSiege(): boolean
}

abstract class Special <<abstract>> {
  +Special(name : String, description : String)
}

abstract class Weather <<abstract>> {
  +Weather(name: String, description: String): Weather
  +play(target : CardTarget): void
  +canBePlaced(target : CardTarget): boolean
  +{abstract}apply(card: Card, row: Row): void
  +{abstract}addToSpecialZone(specialZone : SpecialZone) : void
}

class TorrentialRain {
  +TorrentialRain(name: String, description: String): TorrentialRain
  +apply(card: Card, row: Row): void
  +addToSpecialZone(specialZone : SpecialZone) : void
}

class ImpenetrableFog {
  +ImpenetrableFog(name: String, description: String): ImpenetrableFog
  +apply(card: Card, row: Row): void
  +addToSpecialZone(specialZone : SpecialZone) : void
}

class BitingFrost {
  +BitingFrost(name: String, description: String): BitingFrost
  +apply(card: Card, row: Row): void
  +addToSpecialZone(specialZone : SpecialZone) : void
}

class Decoy {
  +Decoy(name: String, description: String): Decoy
}

class TacticalAdvantage {
  +TacticalAdvantage(name: String, description: String): TacticalAdvantage
}

class Scorch {
  +Scorch(name: String, description: String): Scorch
}

interface Modifier <<interface>> {
  +apply(row: Row): void
}

class TightBond {
}

class Agile {
}

' =====================
' RELATIONSHIPS
' =====================

Card <|-- Unit
Card <|-- Special

Unit --> "*" Modifier

Modifier <|.. TightBond
Modifier <|.. Agile

Special <|-- Decoy
Special <|-- TacticalAdvantage
Special <|-- Scorch
Special <|--- Weather

Weather <|-- TorrentialRain
Weather <|-- ImpenetrableFog
Weather <|-- BitingFrost

@enduml
