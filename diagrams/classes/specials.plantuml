@startuml

skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0

abstract class Special <<abstract>> {
  +Special(name: String, description: String, sectionTypes: List<SectionType>): Special
  +verifyColor(color: PlayerColor) : void
  +setColor(playerColor: PlayerColor): void
}

class Scorch {
  +play(section : Section) : void
  +matchesStrongest(unit : Unit) : boolean
  +burnStrongestCardFrom(card : Card, row : Row) : void
  +saveStrongest(unit : Unit) : void
}

abstract class Weather <<abstract>> {
  +Weather(name: String, description: String, sectionTypes: List<SectionType>): Weather
  +{abstract}apply(card: Card, row: Row): voi
}

class TorrentialRain {
  +TorrentialRain(name: String, description: String): TorrentialRain
  +apply(card: Card, row: Row): void
  +play(section: Section): void
}

class ImpenetrableFog {
  +ImpenetrableFog(name: String, description: String): ImpenetrableFog
  +apply(card: Card, row: Row): void
  +play(section: Section): void
}

class BitingFrost {
  +BitingFrost(name: String, description: String): BitingFrost
  +apply(card: Card, row: Row): void
  +play(section: Section): void
}

class ClearWeather {
  +ClearWeather(name: String, description: String): ClearWeather
  +apply(card: Card, row: Row): void
  +play(section: Section): void
}

class MoraleBoost {
  +MoraleBoost(name: String, description: String, sectionTypes: List<SectionType>): MoraleBoost
  +verifyColor(color: PlayerColor) : void
  +play(section: Section): void
}

Special <|-- Scorch
Special <|-- MoraleBoost
Special <|-- Weather

Weather <|-- ClearWeather
Weather <|-- ImpenetrableFog
Weather <|-- TorrentialRain
Weather <|-- BitingFrost

@enduml