@startuml

skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0


abstract class CardCollection <<abstract>> {
  #cards: List<Card>
  +CardCollection(): CardCollection
  +getCards(): List<Card>
  +addCard(card: Card): void
  +insertCards(cards: List<Card>): void
  +retrieveCard(card: Card): Card
  +getCardCount(): int
  +containsCard(card: Card): boolean
  +isEmpty(): boolean
}

class Hand {
  +Hand(): Hand
  +getNCardsFromDeck(deck: Deck, n: int): void
  +containsCards(cards: List<Card>): boolean
}

class DiscardPile {
  -color: PlayerColor
  +DiscardPile(): DiscardPile
  +getLastCard(): Card
  +addCard(card: Card): void
  +insertCards(cards: List<Card>): void
  +setColor(color PlayerColor): void
  +addCardIfHasSameColor(card: Card): void
  +getLastUnitCardFromType(row Row): Card
}

class Deck {
  +Deck(): Deck
  +getUnitsCount(): long
  +getSpecialsCount(): long
  +validate(): void
  +retrieveNRandomCards(n: int): List<Card>
  +setColorToCards(playerColor PlayerColor): void
}

interface DeckValidator <<interface>> {
  +validate(cards: List<Card>): void
}

class Validate6SpecialCards {
  -MIN_SPECIALS: int
}

class Validate15UnitsCards {
  -MIN_UNITS: int
}


CardCollection <|-- Hand
CardCollection <|-- DiscardPile
CardCollection <|-- Deck


Deck --> "*" DeckValidator
DeckValidator <|.. Validate6SpecialCards
DeckValidator <|.. Validate15UnitsCards



@enduml